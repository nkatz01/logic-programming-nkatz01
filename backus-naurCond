<constant-expression> ::= <conditional-expression>

<conditional-expression> ::= <logical-or-expression>
                           
						   
<logical-or-expression> ::= <logical-and-expression>
                          | <logical-or-expression> || <logical-and-expression>

<logical-and-expression> ::= <equality-expression>
                           | <logical-and-expression> && <equality-expression>


<equality-expression> ::= <relational-expression>
                        | <equality-expression> == <relational-expression>
                        | <equality-expression> != <relational-expression>

<relational-expression> ::= <atomic_texpre> //already implemented 1st line
                          | <relational-expression> < <atomic_texpre>
                          | <relational-expression> > <atomic_texpre>
                          | <relational-expression> <= <atomic_texpre>
                          | <relational-expression> >= <atomic_texpre>
						  
atomic_texpre			 ::= '(' conditional-expression ')'			  
						 | <additive-expression>
						  
						  
						  
						  
						  
ArithmeticExpression     : AdditiveExpression
                         ;

AdditiveExpression       : MultiplicativeExpression
                         | MultiplicativeExpression '+' AdditiveExpression
                         | MultiplicativeExpression '-' AdditiveExpression
                         ;

MultiplicativeExpression : AtomicExpression
                         | AtomicExpression '*' MultiplicativeExpression
                         | AtomicExpression '/' MultiplicativeExpression
                         | AtomicExpression '%' MultiplicativeExpression
                         ;

AtomicExpression         : '(' ArithmeticExpression ')'
                         | ['0'..'9']+
                         ;